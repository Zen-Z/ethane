pragma solidity ^0.4.11;

import './{{  TOKEN_CLASS_NAME }}.sol';
import 'zeppelin-solidity/contracts/crowdsale/Crowdsale.sol';


contract {{ TOKEN_CLASS_NAME }}{{ TOKEN_TYPE }}Crowdsale is Crowdsale {

  function {{ TOKEN_CLASS_NAME }}{{ TOKEN_TYPE }}Crowdsale(uint256 _startBlock, uint256 _endBlock, uint256 _rate, address _wallet) Crowdsale(_startBlock, _endBlock, _rate, _wallet) {
    require(_startBlock >= block.number);
    require(_endBlock >= _startBlock);
    require(_rate > 0);
    require(_wallet != 0x0);

    token = createTokenContract();
    startBlock = _startBlock;
    endBlock = _endBlock;
    rate = _rate;
    wallet = _wallet;
  }

  function createTokenContract() internal returns (MintableToken) {
    return new {{ TOKEN_CLASS_NAME }}();
  }
}
